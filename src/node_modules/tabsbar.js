const STATE = require('STATE')
const statedb = STATE(__filename)
const { sdb, get } = statedb(fallback_module)

module.exports = graph_explorer
async function graph_explorer(opts) {
  const { id, sdb } = await get(opts.sid)
  const on = {
    style: inject
  }
  const div = document.createElement('div')
  const shadow = div.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<h1>Tabs-bar</h1>`
  shadow.querySelector('h1').className = 'text'
  const subs = await sdb.watch(onbatch)
  return div
  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  function inject(data) {
    const sheet = new CSSStyleSheet()
    sheet.replaceSync(data)
    shadow.adoptedStyleSheets = [sheet]
  }
}
function fallback_module() {
  return {
    api: fallback_instance,
  }
  function fallback_instance() {
    return {
      drive: {
        style: {
          'theme.css': {
            raw: `
              .text {
                color: #D8DEE9;
                background-color: #2E3440;
                padding: 1rem;
                border-left: 4px solid #81A1C1;
                line-height: 1.6;
                box-shadow: 0 2px 5px rgba(46, 52, 64, 0.5);
                transition: background-color 0.3s ease, color 0.3s ease;
              }
              
              .text:hover {
                color: #88C0D0;
                background-color: #3B4252;
              }
            `
          }
        }
      }
    }
  }
}
