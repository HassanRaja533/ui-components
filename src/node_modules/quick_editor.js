module.exports = editor

function editor (id, dataset_api) {
  const drive = dataset_api.drive 
  let init

  const el = document.createElement('div')
  el.classList.add('quick-editor')
  el.innerHTML = `
      <button class="dots-button">â‹®</button>
      <div class="quick-box">
        <div class="quick-menu hidden">
          <!-- Top Tabs -->
          <div class="top-btns">
          </div>
          <div class="top-tabs">
          </div>
          <button class="apply-button">Apply</button>
        </div>
      </div>`
  const menu_btn = el.querySelector('.dots-button')
  const menu = el.querySelector('.quick-menu')
  const textarea = el.querySelector('textarea')
  const apply_btn = el.querySelector('.apply-button')
  const top_btns = el.querySelector('.top-btns')
  const top_tabs = el.querySelector('.top-tabs')

  menu_btn.onclick = menu_click
  apply_btn.onclick = apply

  return el

  function make_btn (name, classes) {
    const btn = document.createElement('button')
    btn.textContent = name
    btn.classList.add(...classes.split(' '))
    btn.setAttribute('tab', name)
    return btn
  }
  function make_tab (id, classes) {
    const tab = document.createElement('div')
    tab.classList.add(...classes.split(' '))
    tab.id = id.replaceAll('.', '')
    tab.innerHTML = `
      <div class="sub-btns">
      </div>
      <div class="subtab-content">
      </div>
    `
    return tab
  }
  function make_textarea (id, classes, value) {
    const textarea = document.createElement('textarea')
    textarea.id = id.replaceAll('.', '')
    textarea.classList.add(...classes.split(' '))
    textarea.value = value
    textarea.placeholder = 'Type here...'
    return textarea
  }
  async function menu_click () {
    menu.classList.toggle('hidden')
    if(init)
      return
    init = true
    const datasets = drive.list('', id)
    datasets.forEach((dataset, i) => {
      const first = i ? '' : ' active'
      const no_slash = dataset.split('/')[0]
      const btn = make_btn(no_slash, `tab-button${first}`)
      const tab = make_tab(no_slash, `tab-content${first}`)

      btn.onclick = () => tab_btn_click(btn, top_btns, top_tabs, '.tab-content')
      
      top_btns.append(btn)
      top_tabs.append(tab)

      const sub_btns = tab.querySelector('.sub-btns')
      const subtab = tab.querySelector('.subtab-content')
      const files = drive.list(dataset, id)
      files.forEach(async (file, j) => {
        const first = j ? '' : ' active'
        const sub_btn = make_btn(file, `sub-btn${first}`)
        const textarea = make_textarea(file, `subtab-textarea${first}`, (await drive.get(dataset+file, id)).raw)

        sub_btn.onclick = () => tab_btn_click(sub_btn, sub_btns, subtab, '.subtab-textarea')

        sub_btns.append(sub_btn)
        subtab.append(textarea)
      })
    })
  }
  function tab_btn_click (btn, btns, tabs, tab_class) {
    btns.querySelector('.active').classList.remove('active')
    tabs.querySelector(tab_class+'.active').classList.remove('active')

    btn.classList.add('active')
    tabs.querySelector('#'+btn.getAttribute('tab').replaceAll('.', '')).classList.add('active')

  }

  function apply() {
    if (style && textarea) {
      inject([textarea.value])
    }
  }
}
