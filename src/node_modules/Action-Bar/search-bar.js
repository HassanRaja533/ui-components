const { SearchIcon, CloseIcon } = require('./icons');

function SearchBar({ defaultPath = "Home > Documents > Current" } = {}) {
    const searchBarContainerClass = 'searchBarContainer';
    const inputContainerClass = 'searchInputContainer';
    const contentDivClass = 'searchInputContent';
    const textSpanClass = 'searchInputText';
    const inputElementClass = 'searchInput';
    const resetButtonClass = 'searchResetButton';

    const searchBarContainer = document.createElement('div');
    searchBarContainer.className = searchBarContainerClass;

    const inputContainer = document.createElement('div');
    inputContainer.className = inputContainerClass;

    const contentDiv = document.createElement('div');
    contentDiv.className = contentDivClass;

    const textSpan = document.createElement('div');
    textSpan.className = textSpanClass;
    textSpan.textContent = defaultPath;

    const inputElement = document.createElement('input');
    inputElement.setAttribute('type', 'text');
    inputElement.className = inputElementClass;
    inputElement.style.display = 'none';

    const resetButton = document.createElement('button');
    resetButton.className = resetButtonClass;
    resetButton.appendChild(SearchIcon());

    let isActionState = false;
    let isBreadcrumbMode = true;
    let actionValue = '';

    const handleActionInputFocus = () => {
      contentDiv.innerHTML=''; 
      contentDiv.appendChild(inputElement);
        inputElement.style.display = 'block';
        inputElement.focus();
        resetButton.innerHTML = '';
        resetButton.appendChild(CloseIcon());
        isActionState = true;
        isBreadcrumbMode = false;
    };

    const handleActionInputBlur = () => {
        if (inputElement.value === '' && !isBreadcrumbMode) {
          contentDiv.innerHTML='';
          contentDiv.appendChild(textSpan);
            inputElement.style.display = 'none';
            resetButton.innerHTML = '';
            resetButton.appendChild(SearchIcon());
           isActionState = false;
        }
    };

    const handleReset = () => {
        actionValue = '';
        inputElement.value = '';
        contentDiv.innerHTML='';
        contentDiv.appendChild(textSpan);
        inputElement.style.display = 'none';
        resetButton.innerHTML = '';
        resetButton.appendChild(SearchIcon());
        isActionState = false;
        isBreadcrumbMode = true;
    };

    const handleBreadcrumbClick = () => {
        isActionState = true;
        isBreadcrumbMode = false;
        contentDiv.innerHTML='';
        contentDiv.appendChild(inputElement);
        inputElement.style.display = 'block';
        inputElement.placeholder = '#night';
        inputElement.focus();
        resetButton.innerHTML = '';
        resetButton.appendChild(CloseIcon());
    };

    inputElement.addEventListener('input', (e) => {
        actionValue = e.target.value;
    });

    inputContainer.addEventListener('click', () => {
        if (!isActionState) {
            handleActionInputFocus();
        }
    });

    resetButton.addEventListener('click', (event) => {
        event.stopPropagation();
        handleReset();
    });

    textSpan.addEventListener('click', (event) => {
        event.stopPropagation();
        handleBreadcrumbClick();
    });

    contentDiv.appendChild(textSpan);
    inputContainer.appendChild(contentDiv);
    inputContainer.appendChild(resetButton);
    searchBarContainer.appendChild(inputContainer);

    return searchBarContainer;
}

module.exports = SearchBar;